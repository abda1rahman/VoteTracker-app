version: "3.9"

services:
  nodejs:
    container_name: nodejs
    build: .
    ports:
      - "1337:80"
    environment:
      - NODE_ENV = ${NODE_ENV}
      - MONGO_URL_DEV=${MONGO_URL_DEV}
      - MONGO_URL_PROD=${MONGO_URL_PROD}
      - HOST=${HOST}
      - PORT=${PORT}
      - REDIS_HOST=${REDIS_HOST}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - ACCESS_TOKEN_TIME=${ACCESS_TOKEN_TIME}
      - REFRESH_TOKEN_TIME=${RERESH_TOKEN_TIME}
      - COOKIE_EXPIRE=${COOKIE_EXPIRE}
    volumes:
      - vote_app:/app
    networks:
      - app-network
    depends_on:
      - redis
      - mongodb

  nginx: 
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 81:81
      - 443:443
    volumes:
      - ./nginx/:/etc/nginx/conf.d:ro
      - ./../../../../../etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - database-data:/data/db
    networks:
      - app-network


  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data
    networks:
      - app-network

volumes:
  vote_app:
  redis_volume:
  database-data:

networks:
  app-network:
    driver: bridge